[project]
name = "jpi"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "ellingsvee", email = "elling.svee@gmail.com" }]
requires-python = ">=3.13"
dependencies = [
    "jax>=0.7.2",
    "mpi4py>=4.1.0",
    "nanobind>=2.9.2",
]

[project.scripts]
sparsejax = "jpi:main"

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

[build-system]
requires = ["scikit-build-core>=0.10", "nanobind", "jax"]
build-backend = "scikit_build_core.build"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mpi>=0.6",
    "ruff>=0.13.0",
]
docs = [
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.21",
    "mkdocs-section-index>=0.3.10",
    "mkdocstrings[python]>=0.30.1",
]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
addopts = "--with-mpi"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = [
    "E731", # Allow lambda assignments
]

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

docstring-code-format = true
docstring-code-line-length = "dynamic"
